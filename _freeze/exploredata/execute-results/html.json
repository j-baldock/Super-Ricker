{
  "hash": "4eddd17c60b9a75ae73dcec450b390d6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Explore data\"\nformat: html\ntoc: true\ntoc-depth: 4\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggmcmc)\nlibrary(R2jags)\n```\n:::\n\n\n## Redd counts\n\nLoad data and calculate rate of superimposition as the (average) number of redds divided by the number of clusters, where each cluster contains 1+ redd. See Baldock *et al.* (2023, CJFAS) for details on historical redd count program. The rate of superimposition (*sup*) thus represents the degree to which redds are clustered within each year and stream, with higher values indicating increased rates of clustering/superimposition (minimum value = 1). \n\nBased on the past study, we know that observers both underestimate the number of clusters (detection probability = 0.65) and overestimate the number of redds per cluster. But these antagonistic error sources cancel each other out, such that observed redd counts accurately reflect census redd abundance. Thus, we could correct *clusters* by detection probability (divide by 0.65), while retaining the raw *avgredds* data. But this would affect all years and populations equally, and so relative rates of superimposition among streams and years would be the same. Thus, no sense in correcting. \n\nNevertheless, the ~complex error structure assocaited with redd count data begs the question of the utility of redd count data alone for describing rates of superimposition. A likely better way to describe superimposition would be something like #females per redd or per cluster, but we only have independent spawner/female abundance data for a single stream, Lower Bar BC. \n\n::: {.cell}\n\n```{.r .cell-code}\ndat_rc <- read_csv(\"data/ReddCounts_WGFD_1971-2021_cleaned.csv\") %>%\n  filter(!stream %in% c(\"Cody\", \"Christiansen\", \"Dave\", \"Laker\")) %>% \n  mutate(sup = avgredds / clusters) %>%\n  group_by(stream) %>%\n  complete(year = min(year):max(year)) %>%\n  ungroup()\nhead(dat_rc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 16\n  stream     year date         doy miles   kms   lat  long clusters minredds\n  <chr>     <dbl> <date>     <dbl> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 3 Channel  1973 1973-07-02   183  2.61  4.20  43.6 -111.       81      130\n2 3 Channel  1974 1974-07-02   183  2.61  4.20  43.6 -111.      106      144\n3 3 Channel  1975 1975-07-18   199  2.61  4.20  43.6 -111.       84       NA\n4 3 Channel  1976 1976-07-07   189  2.61  4.20  43.6 -111.      246      293\n5 3 Channel  1977 1977-07-06   187  2.61  4.20  43.6 -111.      229      323\n6 3 Channel  1978 1978-07-18   199  2.61  4.20  43.6 -111.      193      305\n# ℹ 6 more variables: maxredds <dbl>, avgredds <dbl>, ttrout <dbl>,\n#   reddspermile <dbl>, reddsperkm <dbl>, sup <dbl>\n```\n\n\n:::\n:::\n\n\n\nView distributions of superimposition rate by population\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_rc %>%\n  ggplot() +\n  geom_boxplot(aes(x = stream, y = sup), fill = \"grey80\") +\n  xlab(\"Population\") + ylab(\"Rate of superimposition\\n(avg. redds / clusters)\") +\n  theme_bw() + \n  theme(panel.grid = element_blank(), axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nlog-scale\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_rc %>%\n  ggplot() +\n  geom_boxplot(aes(x = stream, y = log(sup)), fill = \"grey80\") +\n  xlab(\"Population\") + ylab(\"(log) Rate of superimposition\\n(avg. redds / clusters)\") +\n  theme_bw() + \n  theme(panel.grid = element_blank(), axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nView time series of superimposition rates: lots of variation both within and among streams\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_rc %>%\n  ggplot(aes(x = year, y = sup)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~stream) +\n  xlab(\"Year\") + ylab(\"Rate of superimposition\\n(avg. redds / cluster)\") +\n  theme_bw() + theme(panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\nAre rates of superimposition related to redd density? *Sorta hokey b/c both superimposition rate and redd density are both calculated using avgredds*\n\nAmong populations with LOESS\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_rc %>%\n  ggplot() +\n  geom_smooth(aes(x = reddsperkm, y = sup), color = \"black\") +\n  geom_point(aes(x = reddsperkm, y = sup, color = stream)) +\n  #geom_line() +\n  #facet_wrap(~stream) +\n  xlab(\"Redds per km\") + ylab(\"Rate of superimposition\\n(avg. redds / clusters)\") +\n  theme_bw() + theme(panel.grid = element_blank()) #+\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  #ggpubr::stat_cor()\n```\n:::\n\n\nBy stream with linear regression smoothers\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_rc %>%\n  ggplot(aes(x = reddsperkm, y = sup)) +\n  geom_point(aes(color = stream)) +\n  geom_smooth(method = \"lm\", color = \"grey40\") +\n  #geom_line() +\n  facet_wrap(~stream, scales = \"free\") +\n  xlab(\"Redds per km\") + ylab(\"Rate of superimposition\\n(avg. redds / clusters)\") +\n  theme_bw() + theme(panel.grid = element_blank(), legend.position = \"none\") +\n  ggpubr::stat_cor()\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-7-1.png){width=768}\n:::\n:::\n\n\n\n### Validate coarse metrics\n\nAnnual redd count data (*avgredds* and *clusters*) are summarized from spawning ground surveys where observers first map redd clusters then estimate the number of redds in each cluster. Annual rates of superimposition can more ~accurately be estimated from these maps by first calculating the rate of superimposition for each cluster, then averaging over all clusters. I previously digitized maps for two streams: Lower Bar BC and Upper Bar BC. Calculate annual superimposition rates (mean and variance) from these data then compare to the \"coarse\" metrics derived from summarized redd count data. Make sure we see a linear/1:1 relationship\n\nLoad data and summarize by stream and year.\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_maps <- read_csv(\"data/WGFD Historical redd maps digitized.csv\") %>%\n  filter(section == \"main\") %>% \n  mutate(stream = recode(stream, \"lower\" = \"Lower Bar BC\",  \"upper\" = \"Upper Bar BC\"),\n         rpc = rowMeans(select(., min, max))) %>%\n  group_by(stream, year) %>%\n  summarize(rpc_mean = mean(rpc),\n            rpc_025 = quantile(rpc, probs = 0.025, na.rm = TRUE),\n            rpc_975 = quantile(rpc, probs = 0.975, na.rm = TRUE)) %>%\n  ungroup()\ndat_maps\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 5\n   stream        year rpc_mean rpc_025 rpc_975\n   <chr>        <dbl>    <dbl>   <dbl>   <dbl>\n 1 Lower Bar BC  1971     4.33    1      16.5 \n 2 Lower Bar BC  1976     3.81    1       9   \n 3 Lower Bar BC  1978     3.82    1.41    8.5 \n 4 Lower Bar BC  1981     2.5     1.15    3.45\n 5 Lower Bar BC  1983     2.33    1.5     3.88\n 6 Lower Bar BC  1985     4.86    1      15.6 \n 7 Lower Bar BC  1987     2.61    1.5     5   \n 8 Lower Bar BC  1988     2.45    1       5.38\n 9 Lower Bar BC  1989     4.81    1      15   \n10 Lower Bar BC  1990     4.28    1      14.7 \n# ℹ 38 more rows\n```\n\n\n:::\n:::\n\n\nView time series\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_maps %>% \n  ggplot() +\n  geom_point(aes(x = year, y = rpc_mean)) +\n  geom_errorbar(aes(x = year, ymin = rpc_025, ymax = rpc_975)) +\n  facet_wrap(~stream, nrow = 2) + \n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Year\") + ylab(\"Redds per cluster, mean and 95% quantile interval\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nCompare with coarse metrics\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_maps %>% \n  left_join(dat_rc %>% select(stream, year, sup)) %>%\n  ggplot(aes(x = rpc_mean, y = sup)) +\n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~stream) + \n  theme_bw() + theme(panel.grid = element_blank()) +\n  xlab(\"Mean redds per cluster (maps)\") + ylab(\"Rate of superimpostion (summarized)\")\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n*Good news, rates of superimposition derived from the summarized data accurately and ~precisely reflect mean rates of superimposition derived from the more detailed redd mapping efforts.*\n\n\n## Ricker b\n\nPopulation order and short names\n\n::: {.cell}\n\n```{.r .cell-code}\nnametib <- tibble(Population = c(1:13),\n                  stream = unique(dat_rc$stream),\n                  stream_short = c(\"THCH\", \"BLKT\", \"BLCR\", \"COCA\", \"FISH\", \"FLAT\", \"LTBC\", \"LOBC\", \"NOWL\", \"PRCE\", \"SRSC\", \"SPRG\", \"UPBC\"))\nnametib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 3\n   Population stream                   stream_short\n        <int> <chr>                    <chr>       \n 1          1 3 Channel                THCH        \n 2          2 Blacktail                BLKT        \n 3          3 Blue Crane               BLCR        \n 4          4 Cowboy Cabin             COCA        \n 5          5 Fish                     FISH        \n 6          6 Flat                     FLAT        \n 7          7 Little Bar BC            LTBC        \n 8          8 Lower Bar BC             LOBC        \n 9          9 Nowlin                   NOWL        \n10         10 Price                    PRCE        \n11         11 Snake River Side Channel SRSC        \n12         12 Spring                   SPRG        \n13         13 Upper Bar BC             UPBC        \n```\n\n\n:::\n:::\n\n\n\nLoad fitted YCT Ricker stock-recruit model and coerce to ggs object\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_01pb <- readRDS(\"C:/Users/jbaldock/OneDrive - DOI/Documents/WyACT/YCT-ReddCounts-Ricker/Model output/ReddCountsRicker_Phase1_Age01p_winvar_AgeSpecMgdPeakMag.RDS\")\nmod_gg <- ggs(as.mcmc(mod_01pb), keep_original_order = TRUE)\n```\n:::\n\n\nGet Ricker b's and summarize: posterior mean and 95% credible intervals\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_gg_B <- mod_gg %>% \n  filter(Parameter %in% paste(\"B[\", 1:13, \"]\", sep = \"\")) %>%\n  mutate(Population = parse_number(as.character(Parameter))) %>%\n  left_join(nametib)\n\nmod_gg_B_summ <- mod_gg_B %>%\n  group_by(Population, stream, stream_short) %>%\n  summarize(B_mean = mean(value),\n            B_025 = quantile(value, probs = 0.025),\n            B_975 = quantile(value, probs = 0.975)) %>%\n  ungroup()\n```\n:::\n\n\nPlot posterior means and 95% credible intervals\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_gg_B_summ %>%\n  ggplot() +\n  geom_point(aes(x = stream, y = B_mean)) +\n  geom_errorbar(aes(x = stream, ymin = B_025, ymax = B_975), width = 0.2) +\n  xlab(\"Population\") + ylab(\"Ricker b (posterior mean and 95% CI)\") +\n  theme_bw() + \n  theme(panel.grid = element_blank(), axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n## Compare\n\n### All data\n\nSummarize superimposition data and join with summarized Ricker b's\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker <- dat_rc %>%\n  # filter(year < 2000) %>%\n  group_by(stream) %>%\n  summarize(sup_med = median(sup, na.rm = TRUE),\n            sup_025 = quantile(sup, probs = 0.25, na.rm = TRUE),\n            sup_975 = quantile(sup, probs = 0.75, na.rm = TRUE),\n            logsup_med = median(log(sup), na.rm = TRUE),\n            logsup_025 = quantile(log(sup), probs = 0.25, na.rm = TRUE),\n            logsup_975 = quantile(log(sup), probs = 0.75, na.rm = TRUE)) %>%\n  ungroup() %>%\n  left_join(mod_gg_B_summ)\nsupricker\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 12\n   stream    sup_med sup_025 sup_975 logsup_med logsup_025 logsup_975 Population\n   <chr>       <dbl>   <dbl>   <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\n 1 3 Channel    1.77    1.63    2.05      0.573      0.486      0.719          1\n 2 Blacktail    1.68    1.31    2.00      0.520      0.268      0.694          2\n 3 Blue Cra…    1.78    1.65    1.95      0.574      0.503      0.670          3\n 4 Cowboy C…    1.44    1.34    1.83      0.365      0.296      0.602          4\n 5 Fish         2.48    1.91    2.79      0.908      0.648      1.02           5\n 6 Flat         1.45    1.28    1.82      0.375      0.246      0.602          6\n 7 Little B…    1.78    1.54    2.05      0.575      0.434      0.717          7\n 8 Lower Ba…    2.70    2.33    3.89      0.992      0.846      1.36           8\n 9 Nowlin       1.47    1.35    1.75      0.383      0.303      0.562          9\n10 Price        1.54    1.42    1.69      0.431      0.350      0.525         10\n11 Snake Ri…    1.36    1.19    1.64      0.306      0.177      0.491         11\n12 Spring       1.70    1.50    1.86      0.531      0.403      0.622         12\n13 Upper Ba…    1.37    1.23    1.66      0.312      0.203      0.506         13\n# ℹ 4 more variables: stream_short <chr>, B_mean <dbl>, B_025 <dbl>,\n#   B_975 <dbl>\n```\n\n\n:::\n:::\n\n\nPlot relationship with error bars\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker %>%\n  ggplot() + \n  geom_errorbar(aes(x = logsup_med, ymin = B_025, ymax = B_975), width = 0.02, color = \"grey50\") +\n  geom_errorbarh(aes(xmin = logsup_025, xmax = logsup_975, y = B_mean), height = 0.002, color = \"grey50\") +\n  geom_point(aes(x = logsup_med, y = B_mean), size = 2) +\n  xlab(\"(log) Rate of superimposition, median and 50% quantile interval\") + ylab(\"Ricker b, posterior mean and 95% credible interval\") +\n  theme_bw() + theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nWith labels\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker %>%\n  ggplot(aes(x = logsup_med, y = B_mean)) + \n  geom_point(size = 2) +\n  geom_text(aes(label = stream_short), vjust = 1.5) +\n  xlab(\"(log) Rate of superimposition, median\") + ylab(\"Ricker b, posterior mean\") +\n  theme_bw() + theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n### Pre-2000\n\nOnly use redd count data prior to 2000 to calculate population-level median rate of superimposition\n\nSummarize superimposition data and join with summarized Ricker b's\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker <- dat_rc %>%\n  filter(year < 2000) %>%\n  group_by(stream) %>%\n  summarize(sup_med = median(sup, na.rm = TRUE),\n            sup_025 = quantile(sup, probs = 0.25, na.rm = TRUE),\n            sup_975 = quantile(sup, probs = 0.75, na.rm = TRUE),\n            logsup_med = median(log(sup), na.rm = TRUE),\n            logsup_025 = quantile(log(sup), probs = 0.25, na.rm = TRUE),\n            logsup_975 = quantile(log(sup), probs = 0.75, na.rm = TRUE)) %>%\n  ungroup() %>%\n  left_join(mod_gg_B_summ)\nsupricker\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 12\n   stream    sup_med sup_025 sup_975 logsup_med logsup_025 logsup_975 Population\n   <chr>       <dbl>   <dbl>   <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\n 1 3 Channel    1.67    1.41    1.92      0.514      0.345      0.652          1\n 2 Blacktail    1.53    1.22    1.89      0.426      0.196      0.638          2\n 3 Blue Cra…    1.82    1.64    2.11      0.597      0.494      0.746          3\n 4 Cowboy C…    1.38    1.27    1.47      0.318      0.237      0.387          4\n 5 Fish         2.67    2.50    3.22      0.982      0.918      1.17           5\n 6 Flat         1.40    1.26    1.53      0.336      0.234      0.426          6\n 7 Little B…    1.61    1.45    1.77      0.478      0.369      0.571          7\n 8 Lower Ba…    3.81    2.51    4.32      1.34       0.922      1.46           8\n 9 Nowlin       1.44    1.33    1.52      0.362      0.284      0.419          9\n10 Price        1.50    1.39    1.64      0.406      0.330      0.492         10\n11 Snake Ri…    1.45    1.23    1.76      0.370      0.205      0.567         11\n12 Spring       1.86    1.69    1.94      0.622      0.522      0.661         12\n13 Upper Ba…    1.31    1.21    1.42      0.273      0.194      0.352         13\n# ℹ 4 more variables: stream_short <chr>, B_mean <dbl>, B_025 <dbl>,\n#   B_975 <dbl>\n```\n\n\n:::\n:::\n\n\nPlot relationship with error bars\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker %>%\n  ggplot() + \n  geom_errorbar(aes(x = logsup_med, ymin = B_025, ymax = B_975), width = 0.02, color = \"grey50\") +\n  geom_errorbarh(aes(xmin = logsup_025, xmax = logsup_975, y = B_mean), height = 0.002, color = \"grey50\") +\n  geom_point(aes(x = logsup_med, y = B_mean), size = 2) +\n  xlab(\"(log) Rate of superimposition, median and 50% quantile interval\") + ylab(\"Ricker b, posterior mean and 95% credible interval\") +\n  theme_bw() + theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nWith labels\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker %>%\n  ggplot(aes(x = logsup_med, y = B_mean)) + \n  geom_point(size = 2) +\n  geom_text(aes(label = stream_short), vjust = 1.5) +\n  xlab(\"(log) Rate of superimposition, median\") + ylab(\"Ricker b, posterior mean\") +\n  theme_bw() + theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n### Post-2000\n\nOnly use redd count data after 2000 to calculate population-level median rate of superimposition\n\nSummarize superimposition data and join with summarized Ricker b's\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker <- dat_rc %>%\n  filter(year >= 2000) %>%\n  group_by(stream) %>%\n  summarize(sup_med = median(sup, na.rm = TRUE),\n            sup_025 = quantile(sup, probs = 0.25, na.rm = TRUE),\n            sup_975 = quantile(sup, probs = 0.75, na.rm = TRUE),\n            logsup_med = median(log(sup), na.rm = TRUE),\n            logsup_025 = quantile(log(sup), probs = 0.25, na.rm = TRUE),\n            logsup_975 = quantile(log(sup), probs = 0.75, na.rm = TRUE)) %>%\n  ungroup() %>%\n  left_join(mod_gg_B_summ)\nsupricker\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 12\n   stream    sup_med sup_025 sup_975 logsup_med logsup_025 logsup_975 Population\n   <chr>       <dbl>   <dbl>   <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\n 1 3 Channel    1.88    1.83    2.05      0.633      0.605      0.719          1\n 2 Blacktail    1.93    1.74    2.12      0.659      0.553      0.751          2\n 3 Blue Cra…    1.71    1.68    1.82      0.539      0.519      0.597          3\n 4 Cowboy C…    1.85    1.45    2.13      0.614      0.373      0.756          4\n 5 Fish         1.99    1.83    2.15      0.687      0.604      0.766          5\n 6 Flat         2.07    1.74    2.09      0.729      0.555      0.737          6\n 7 Little B…    2.02    2       2.12      0.703      0.693      0.754          7\n 8 Lower Ba…    2.48    2.27    3.75      0.910      0.820      1.32           8\n 9 Nowlin       1.80    1.77    1.84      0.589      0.569      0.612          9\n10 Price        1.96    1.81    2.11      0.660      0.581      0.739         10\n11 Snake Ri…    1.19    1.18    1.31      0.176      0.168      0.268         11\n12 Spring       1.48    1.45    1.65      0.389      0.371      0.499         12\n13 Upper Ba…    1.77    1.38    1.94      0.568      0.322      0.664         13\n# ℹ 4 more variables: stream_short <chr>, B_mean <dbl>, B_025 <dbl>,\n#   B_975 <dbl>\n```\n\n\n:::\n:::\n\n\nPlot relationship with error bars\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker %>%\n  ggplot() + \n  geom_errorbar(aes(x = logsup_med, ymin = B_025, ymax = B_975), width = 0.02, color = \"grey50\") +\n  geom_errorbarh(aes(xmin = logsup_025, xmax = logsup_975, y = B_mean), height = 0.002, color = \"grey50\") +\n  geom_point(aes(x = logsup_med, y = B_mean), size = 2) +\n  xlab(\"(log) Rate of superimposition, median and 50% quantile interval\") + ylab(\"Ricker b, posterior mean and 95% credible interval\") +\n  theme_bw() + theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nWith labels\n\n::: {.cell}\n\n```{.r .cell-code}\nsupricker %>%\n  ggplot(aes(x = logsup_med, y = B_mean)) + \n  geom_point(size = 2) +\n  geom_text(aes(label = stream_short), vjust = 1.5) +\n  xlab(\"(log) Rate of superimposition, median\") + ylab(\"Ricker b, posterior mean\") +\n  theme_bw() + theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](exploredata_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}